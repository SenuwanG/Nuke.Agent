import requests
import subprocess

def get_installed_packages():
    try:
        cmd = "dpkg-query -W -f='${Package}\t${Version}\n'"
        result = subprocess.check_output(cmd, shell=True, universal_newlines=True)
        return result.strip().split('\n')
    except subprocess.CalledProcessError as e:
        print(f"Error: {e}")
        return []

def generate_report(installed_packages):
    report = "Software Report:\n\n"
    for package_info in installed_packages:
        package, version = package_info.split('\t')
        vulnerabilities = check_vulnerability(package, version)
        if vulnerabilities:
            report += f"{package} (Version: {version}) - Vulnerabilities:\n"
            for vulnerability in vulnerabilities:
                report += f"\t- {vulnerability}\n"
            report += "\n"
    return report

def check_vulnerability(package, version):
    url = f"https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=cpe:2.3:a:{package}:{version}:*&startIndex=0"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            cve_items = data.get("result", {}).get("CVE_Items", [])
            if cve_items:
                vulnerabilities = []
                for item in cve_items:
                    cve_id = item.get("cve", {}).get("CVE_data_meta", {}).get("ID", "")
                    vulnerabilities.append(cve_id)
                return vulnerabilities
    except requests.RequestException as e:
        print(f"Error checking vulnerability for {package} (Version: {version}): {e}")
    return []

def save_report_to_file(report, filename="software_report.txt"):
    try:
        with open(filename, "w") as file:
            file.write(report)
        print(f"Report saved to {filename}")
    except IOError as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    installed_packages = get_installed_packages()
    report = generate_report(installed_packages)
    print(report)

    save_to_file = input("Do you want to save the report to a file? (y/n): ").lower()
    if save_to_file == "y":
        save_report_to_file(report)
